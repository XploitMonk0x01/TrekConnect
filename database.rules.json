{
  "rules": {
    "users": {
      ".read": "auth != null",
      "$uid": {
        ".write": "auth != null && auth.uid == $uid"
      },
      ".indexOn": ["updatedAt"]
    },
    "rooms": {
      "$roomId": {
        ".read": "auth != null && (!data.exists() || data.child('members').child(auth.uid).exists())",
        ".write": "auth != null && ((!data.exists() && newData.child('members').child(auth.uid).exists()) || (data.exists() && data.child('members').child(auth.uid).exists()))",
        ".validate": "newData.hasChildren(['members', 'createdAt'])",
        ".indexOn": ["lastMessageTime", "createdAt"]
      }
    },
    "messages": {
      "$roomId": {
        ".read": "auth != null && root.child('rooms').child($roomId).child('members').child(auth.uid).exists()",
        "$messageId": {
          ".write": "auth != null && newData.child('senderId').val() == auth.uid",
          ".validate": "newData.hasChildren(['senderId', 'recipientId', 'content', 'timestamp']) && newData.child('senderId').val() == auth.uid"
        }
      }
    },
    "photos": {
      ".read": "auth != null",
      ".indexOn": "uploadedAt",
      "$photoId": {
        ".write": "auth != null && (!data.exists() || data.child('userId').val() == auth.uid)"
      }
    },
    "stories": {
      ".read": "auth != null",
      ".indexOn": "createdAt",
      "$storyId": {
        ".write": "auth != null && (!data.exists() || data.child('userId').val() == auth.uid)"
      }
    }
  }
}
